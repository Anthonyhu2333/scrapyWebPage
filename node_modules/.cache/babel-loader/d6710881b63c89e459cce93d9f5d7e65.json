{"remainingRequest":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/babel-loader/lib/index.js!/Users/yuxue/Desktop/web/data_collect_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuxue/Desktop/web/data_collect_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuxue/Desktop/web/data_collect_web/src/components/ScrapyConfig.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuxue/Desktop/web/data_collect_web/src/components/ScrapyConfig.vue","mtime":1623167044018},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy95dXh1ZS9EZXNrdG9wL3dlYi9kYXRhX2NvbGxlY3Rfd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFkZFNjcmFweUluc3RhbmNlVmlzaWJsZTogZmFsc2UsCiAgICAgIC8vIOaWsOWinueIrOiZq+WunuS+i+ihqOWNleWGheeahOaVsOaNrgogICAgICBzY3JhcHlJbnN0YW5jZUluZm86IHsKICAgICAgICBzY3JhcHlOYW1lOiAnJywKICAgICAgICBvcGVuU2NyYXB5Q29tbWFuZDogJycsCiAgICAgICAgY2xvc2VTY3JhcHlDb21tYW5kOiAnJywKICAgICAgICBmaWxlU2F2ZVBhdGg6ICcnCiAgICAgIH0sCiAgICAgIGZpbGVzOiBbXSwKICAgICAgc2NyYXB5c0xpc3Q6ICcnLAogICAgICBhZGRTY3JhcHlydWxlRm9ybTogewogICAgICAgIHNjcmFweU5hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXniKzomavlrp7kvovlkI3np7AnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgc2NyYXB5Q29kZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeeIrOiZq+WunuS+i+aJp+ihjOWRveS7pCcsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0U2NyYXB5TGlzdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U2NyYXB5TGlzdDogZnVuY3Rpb24gZ2V0U2NyYXB5TGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpcyQkaHR0cCRnZSwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kaHR0cC5nZXQoJ2xpc3RTY3JhcHlJbnN0YW5jZScpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXMkJGh0dHAkZ2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzJCRodHRwJGdlLmRhdGE7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5jb2RlICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfdGhpcy4kbWVzc2FnZS5lcnJvcign54is6Jmr5a6e5L6L6I635Y+W5aSx6LSlJykpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfdGhpcy5zY3JhcHlzTGlzdCA9IHJlcy5lbnRpdHk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhZGRTY3JhcHlJbnN0YW5jZTogZnVuY3Rpb24gYWRkU2NyYXB5SW5zdGFuY2UoKSB7CiAgICAgIHRoaXMuYWRkU2NyYXB5SW5zdGFuY2VWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBlZGl0U2NyYXB5SW5zdGFuY2U6IGZ1bmN0aW9uIGVkaXRTY3JhcHlJbnN0YW5jZShzY3JhcHkpIHsKICAgICAgY29uc29sZS5sb2coc2NyYXB5KTsKICAgIH0sCiAgICBkZWxldGVTY3JhcHlJbnN0YW5jZTogZnVuY3Rpb24gZGVsZXRlU2NyYXB5SW5zdGFuY2Uoc2NyYXB5KSB7CiAgICAgIGNvbnNvbGUubG9nKHNjcmFweSk7CiAgICB9LAogICAgcmVzZXRTY3JwYXlJbnN0YW5jZUZvcm06IGZ1bmN0aW9uIHJlc2V0U2NycGF5SW5zdGFuY2VGb3JtKCkgewogICAgICB0aGlzLiRyZWZzLmFkZFNjcmFweUluc3RhbmNlUmVmLnJlc2V0RmllbGRzKCk7CiAgICB9LAogICAgdXBsb2FkRmlsZTogZnVuY3Rpb24gdXBsb2FkRmlsZShwYXJhbXMpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZmlsZSwgZm9ybURhdGEsIF95aWVsZCRfdGhpczIkJGh0dHAkcCwgcmVzMTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGZpbGUgPSBwYXJhbXMuZmlsZTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhID0gbmV3IHdpbmRvdy5Gb3JtRGF0YSgpOwogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRodHRwLnBvc3QoJ3VwbG9hZFNjcmFweUZpbGUnLCBmb3JtRGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczIkJGh0dHAkcCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmVzMSA9IF95aWVsZCRfdGhpczIkJGh0dHAkcC5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlczEuY29kZSAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoJ+aWh+S7tuS4iuS8oOWksei0pScpKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX3RoaXMyLnNjcmFweUluc3RhbmNlSW5mby5maWxlU2F2ZVBhdGggPSByZXMxLmVudGl0eTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGFkZFNjcmFweUluc3RhbmNlU3VibWl0OiBmdW5jdGlvbiBhZGRTY3JhcHlJbnN0YW5jZVN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzLmFkZFNjcmFweUluc3RhbmNlUmVmLnZhbGlkYXRlKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyh2YWxpZCkgewogICAgICAgICAgdmFyIF95aWVsZCRfdGhpczMkJGh0dHAkcCwgcmVzOwoKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLiRodHRwLnBvc3QoJ2FkZFNjcmFweUluc3RhbmNlJywgX3RoaXMzLnNjcmFweUluc3RhbmNlSW5mbyk7CgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXMzJCRodHRwJHAgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzMyQkaHR0cCRwLmRhdGE7CgogICAgICAgICAgICAgICAgICBpZiAoIShyZXMuY29kZSAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF90aGlzMy4kbWVzc2FnZS5lcnJvcign54is6Jmr5re75Yqg5aSx6LSlJykpOwoKICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+eIrOiZq+a3u+WKoOaIkOWKnycpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMzLmdldFNjcmFweUxpc3QoKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMy5hZGRTY3JhcHlJbnN0YW5jZVZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ScrapyConfig.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n    <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n    <el-breadcrumb-item>采集设备管理</el-breadcrumb-item>\n    <el-breadcrumb-item>爬虫配置</el-breadcrumb-item>\n  </el-breadcrumb>\n  <el-card>\n    <el-button type = \"primary\" @click=\"addScrapyInstance()\">新增爬虫实例</el-button>\n    <el-dialog title=\"添加爬虫实例\" :visible.sync=\"addScrapyInstanceVisible\" width=\"50%\" @close=\"resetScrpayInstanceForm()\">\n      <el-form :model=\"scrapyInstanceInfo\" :rules=\"addScrapyruleForm\" ref=\"addScrapyInstanceRef\" label-width=\"100px\">\n        <el-form-item label=\"实例名称\" prop=\"scrapyName\">\n          <el-input v-model=\"scrapyInstanceInfo.scrapyName\" ></el-input>\n        </el-form-item>\n        <el-form-item label =\"开启爬虫命令\" prop = \"openScrapyCommand\">\n          <el-input v-model=\"scrapyInstanceInfo.openScrapyCommand\" ></el-input>\n        </el-form-item>\n        <el-form-item label =\"关闭爬虫命令\" prop = \"closeScrapyCommand\">\n          <el-input v-model=\"scrapyInstanceInfo.closeScrapyCommand\" ></el-input>\n        </el-form-item>\n        <el-form-item label =\"上传文件\" prop = \"fileSavePath\">\n          <!-- <el-input type = \"file\" v-model=\"scrapyInstanceInfo.fileSavePath\" id = \"fileInput\"></el-input> -->\n          <el-upload\n           action=\"\"\n           :limit=\"1\"\n           show-file-list\n           drag\n           :file-list = \"files\"\n           :http-request=\"uploadFile\">\n           <i class=\"el-icon-upload\"></i>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"addScrapyInstanceVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"addScrapyInstanceSubmit()\">添加</el-button>\n      </span>\n    </el-dialog>\n    <el-table :data=\"scrapysList\" stripe border style=\"width: 100%\">\n      <el-table-column type=\"index\"></el-table-column>\n      <el-table-column prop=\"scrapyName\" label=\"爬虫实例名称\"></el-table-column>\n      <el-table-column prop=\"fileSavePath\" label=\"爬虫文件保存路径\"></el-table-column>\n      <el-table-column prop=\"openScrapyCommand\" label=\"爬虫开启命令\"></el-table-column>\n      <el-table-column prop=\"closeScrapyCommand\" label=\"爬虫关闭命令\"></el-table-column>\n      <el-table-column prop=\"topic\" label=\"保存队列\"></el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"editScrapyInstance(scope.row)\"></el-button>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" @click =\"deleteScrapyInstance(scope.row)\"></el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      addScrapyInstanceVisible: false,\n      // 新增爬虫实例表单内的数据\n      scrapyInstanceInfo: {\n        scrapyName: '',\n        openScrapyCommand: '',\n        closeScrapyCommand: '',\n        fileSavePath: ''\n      },\n      files: [],\n      scrapysList: '',\n      addScrapyruleForm: {\n        scrapyName: [\n          { required: true, message: '请输入爬虫实例名称', trigger: 'blur' }\n        ],\n        scrapyCode: [\n          { required: true, message: '请输入爬虫实例执行命令', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getScrapyList()\n  },\n  methods: {\n    async getScrapyList () {\n      const { data: res } = await this.$http.get('listScrapyInstance')\n      console.log(res)\n      if (res.code !== 200) {\n        return this.$message.error('爬虫实例获取失败')\n      }\n      this.scrapysList = res.entity\n    },\n    addScrapyInstance () {\n      this.addScrapyInstanceVisible = true\n    },\n    editScrapyInstance (scrapy) {\n      console.log(scrapy)\n    },\n    deleteScrapyInstance (scrapy) {\n      console.log(scrapy)\n    },\n    resetScrpayInstanceForm () {\n      this.$refs.addScrapyInstanceRef.resetFields()\n    },\n    async uploadFile (params) {\n      const file = params.file\n      const formData = new window.FormData()\n      formData.append('file', file)\n      const { data: res1 } = await this.$http.post('uploadScrapyFile', formData)\n      if (res1.code !== 200) {\n        return this.$message.error('文件上传失败')\n      }\n      this.scrapyInstanceInfo.fileSavePath = res1.entity\n    },\n    addScrapyInstanceSubmit () {\n      this.$refs.addScrapyInstanceRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post('addScrapyInstance', this.scrapyInstanceInfo)\n        if (res.code !== 200) return this.$message.error('爬虫添加失败')\n        this.$message.success('爬虫添加成功')\n        this.getScrapyList()\n        this.addScrapyInstanceVisible = false\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n.el-breadcrumb{\n  margin-bottom:15px;\n  font-size: 12px;\n}\n.el-card{\n  box-shadow: 0 1px 1px rgba(0,0,0,0.25)!important;\n}\n</style>\n"],"sourceRoot":"src/components"}]}