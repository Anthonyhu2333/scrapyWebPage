{"remainingRequest":"/Users/anthony/Desktop/data_collect_web/node_modules/babel-loader/lib/index.js!/Users/anthony/Desktop/data_collect_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/anthony/Desktop/data_collect_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anthony/Desktop/data_collect_web/src/components/DataStore.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anthony/Desktop/data_collect_web/src/components/DataStore.vue","mtime":1623679565000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataStore.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>采集设备管理</el-breadcrumb-item>\n      <el-breadcrumb-item>网站爬虫</el-breadcrumb-item>\n      <el-breadcrumb-item>数据入库与告警</el-breadcrumb-item>\n      <el-breadcrumb-item>数据入库</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-table :data = 'websiteslist' stripe border style=\"width: 100%\">\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column prop=\"websiteName\" label=\"网站名称\"> </el-table-column>\n        <el-table-column prop=\"url\" label=\"网站url\"> </el-table-column>\n        <el-table-column prop=\"state\" label=\"网站状态\"></el-table-column>\n        <el-table-column prop=\"scrapySelect\" label=\"爬虫实例\"></el-table-column>\n        <el-table-column prop=\"scrapyState\" label=\"爬虫状态\"></el-table-column>\n        <el-table-column label=\"数据表\" prop = \"tableName\">\n          <template slot-scope = \"scope\">\n            <el-select v-model = \"scope.row.tableName\" placeholder=\"请选择数据表\">\n              <el-option v-for = \"(item,index) in dbTableList\" :label= \"item\" :value = \"item\" :key = \"index\"></el-option>\n            </el-select>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" @click=\"dataStore(scope.row)\">数据入库</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-dialog title=\"数据入库\" :visible.sync= \"dataStoreVisible\" width=\"50%\" @close=\"resetForm()\">\n        <el-row><el-col :span=\"24\">爬虫保存数据案例: {{stringInfo}}</el-col></el-row>\n        <el-form :model=\"dropInfo\" :rules= \"addruleForm\" ref=\"addFormRef\" label-width=\"100px\" margin-top=\"3px\">\n          <el-row v-for = \"(item,index) in dropInfo.items \" :key=\"index\" >\n            <el-col :span= \"10\">\n              <el-form-item prop=\"item.topic\" label=\"topic列表:\" font-size=\"60px\">\n                <el-select v-model=\"dropInfo.items[index].topic\" placeholder= \"请选择topic\">\n                  <el-option v-for = \"(value,key,index1) in topics\" :label= \"key\" :value = \"key\" :key = \"index1\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span = \"10\">\n              <el-form-item prop=\"item.tableName\" label=\"数据库列表:\">\n                <el-select v-model=\"dropInfo.items[index].tableName\" placeholder= \"请选择数据库列表\">\n                  <el-option v-for = \"(item2,index2) in tableNames\" :label= \"item2\" :value = \"item2\" :key = \"index2\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n             <el-col span=\"4\">\n              <el-button v-if=\"index!==0\" type=\"danger\" @click=\"removeNewTag(index)\" icon=\"el-icon-delete\"></el-button>\n              <el-button v-else type=\"primary\" @click=\"addNewDrop()\">+</el-button>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col>入库定时设置：</el-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.day\" controls-position=\"right\" :min=\"0\"></el-input-number><span>天</span></e-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.hour\" controls-position=\"right\" :min=\"0\"></el-input-number><span>时</span></e-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.min\" controls-position=\"right\" :min=\"0\"></el-input-number><span>分</span></e-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.second\" controls-position=\"right\" :min=\"0\"></el-input-number><span>秒</span></e-col>\n          </el-row>\n        </el-form>\n        <span slot=\"footer\">\n          <el-button @click=\"dataStoreVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"dataStoreSubmit(dropInfo)\">入库</el-button>\n        </span>\n      </el-dialog>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      websiteslist: [{\n        websiteName: 'websiteName',\n        url: 'url',\n        state: '',\n        scrapySelect: 'scrapyName',\n        scrapyState: ''\n      }],\n      // 选择的数据表的名字\n      dbTableList: [\n        '1', '2', '3'\n      ],\n      // 点击数据入库按钮弹出的对话框\n      dataStoreVisible: false,\n      // 爬虫保存数据案例\n      stringInfo: '',\n      dropInfo: {\n        websiteName: '',\n        websiteUrl: '',\n        tableName: '',\n        scrapyName: '',\n        items: [\n          {\n            topic: '',\n            tableName: ''\n          }\n        ],\n        time: {\n          day: '',\n          hour: '',\n          min: '',\n          second: ''\n        }\n      },\n      topics: {\n        1: '1',\n        '2-topic': 'topic'\n      },\n      tableNames: ['1', '2', '3']\n    }\n  },\n  created () {\n    this.getWebsitelist()\n    this.getDBTableList()\n  },\n  methods: {\n    async getWebsitelist () {\n      // 获取网站列表\n      const { data: res } = await this.$http.get('listWebsites')\n      if (res.code !== 200) {\n        return this.$message.error('获取网站列表失败')\n      }\n      this.websiteslist = res.entity\n    },\n    async getDBTableList () {\n      // 获取数据表名字\n      const { data: res } = await this.$http.get('listDBTableName')\n      if (res.code !== 200) {\n        return this.$message.error('获取数据列表失败')\n      }\n      this.dbTableList = res.entity\n    },\n    async dataStore (website) {\n      this.dataStoreVisible = true\n      console.log(website)\n      this.dropInfo.tableName = website.tableName\n      this.dropInfo.scrapyName = website.scrapySelect\n      this.dropInfo.websiteName = website.websiteName\n      this.dropInfo.websiteUrl = website.url\n      const params = new URLSearchParams()\n      params.append('scrapyName', website.scrapySelect)\n\n      const { data: res } = await this.$http.post('selectTopicByScrapyName', params)\n      if (res.code !== 200) {\n        return this.$message.error('获取爬虫topic失败')\n      }\n      const info = new URLSearchParams()\n      info.append('topic', res.entity)\n      const { data: res2 } = await this.$http.post('showTopicOneInfo', info)\n      if (res2.code !== 200) {\n        return this.$message.error('根据爬虫获取爬虫实例失败')\n      }\n      this.stringInfo = res2.entity\n      this.topics = res2.entity\n      this.getTableNames(website.tableName)\n    },\n    async getTableNames (tableName) {\n      const params = new URLSearchParams()\n      params.append('tableName', tableName)\n      const { data: res } = await this.$http.post('listTableColumn', params)\n      if (res.code !== 200) {\n        return this.$message.error('获取数据列表失败')\n      }\n      this.tableNames = res.entity\n    },\n    addNewDrop () {\n      this.dropInfo.items.push({\n        tableName: '',\n        topic: ''\n      })\n    },\n    async dataStoreSubmit (dropInfo) {\n      // datastore\n      console.log(dropInfo)\n      const time = (dropInfo.time.second) + dropInfo.time.min * 60 + dropInfo.time.hour * 3600 + dropInfo.time.day * 3600 * 24\n      const tableName = dropInfo.tableName\n      const tableList = []\n      const topicList = []\n      for (let i = 0; i < dropInfo.items.length; i++) {\n        tableList.push(dropInfo.items[i].tableName)\n        topicList.push(dropInfo.items[i].topic)\n      }\n      const params = new URLSearchParams()\n      params.append('tableName', tableName)\n      params.append('seconds', time)\n      params.append('topicColumns', topicList)\n      params.append('DBTableColumns', tableList)\n      params.append('websiteName', dropInfo.websiteName)\n      params.append('websiteUrl', dropInfo.websiteUrl)\n      params.append('scrapyName', dropInfo.scrapyName)\n      const { data: res } = await this.$http.post('insertKafkaIntoDBTable', params)\n      if (res.code !== 200) {\n        return this.$message.error('数据库插入失败')\n      }\n      this.$message.success('数据插入成功')\n    },\n    removeNewTag (index) {\n      this.dropInfo.items.pop(index)\n    },\n    resetForm () {\n      // 重置新增页面的数据\n      console.log(this.$refs.addFormRef)\n      this.$refs.addFormRef.resetFields()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-breadcrumb{\n  margin-bottom:15px;\n  font-size: 12px;\n}\n.el-card{\n  box-shadow: 0 1px 1px rgba(0,0,0,0.25)!important;\n}\n.el-input-number{\n  width: 75px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}