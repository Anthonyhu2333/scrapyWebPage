{"remainingRequest":"/Users/anthony/Desktop/data_collect_web/node_modules/babel-loader/lib/index.js!/Users/anthony/Desktop/data_collect_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/anthony/Desktop/data_collect_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anthony/Desktop/data_collect_web/src/components/DB/DBStore.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anthony/Desktop/data_collect_web/src/components/DB/DBStore.vue","mtime":1625302318000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthony/Desktop/data_collect_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DBStore.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>采集设备管理</el-breadcrumb-item>\n      <el-breadcrumb-item>远程数据库</el-breadcrumb-item>\n      <el-breadcrumb-item>数据入库与告警</el-breadcrumb-item>\n      <el-breadcrumb-item>数据入库</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card >\n      <el-table :data = 'canalList' stripe border style=\"width: 100%\">\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column prop=\"additionalInfo\" label=\"实例名称\"></el-table-column>\n        <el-table-column prop=\"serverAddress\" label=\"canal-Ip\"></el-table-column>\n        <el-table-column prop=\"port\" label=\"canal-Port\"></el-table-column>\n        <el-table-column prop=\"destination\" label=\"监控队列名称\"></el-table-column>\n        <el-table-column prop=\"topic\" label=\"Kafka-Topic\"></el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-tooltip content=\"启动实例\" placement=\"top\">\n              <el-button type=\"success\" size=\"mini\" @click=\"openInstance(scope.row)\" icon = \"el-icon-switch-button\"></el-button>\n            </el-tooltip>\n            <el-tooltip content=\"数据同步\" placement=\"top\">\n              <el-button type=\"primary\" size=\"mini\" @click=\"dataStore(scope.row)\" icon=\"el-icon-refresh\"></el-button>\n            </el-tooltip>\n            <el-tooltip content=\"停止同步\" placement=\"top\">\n              <el-button type=\"danger\" size=\"mini\" @click=\"stopInstance(scope.row)\" icon=\"el-icon-circle-close\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-dialog title=\"数据同步\" :visible.sync= \"dataStoreVisible\" width=\"50%\" @close=\"resetForm()\">\n        <el-form :model=\"dropInfo\" :rules= \"addruleForm\" ref=\"addFormRef\" label-width=\"100px\" margin-top=\"3px\">\n          <el-card v-for=\"(item,index) in dropInfo.tableList\" :key=\"index\" style=\"margin:2px\">\n            <el-button v-if=\"index!==0\" type=\"danger\" @click=\"removeNewTag(index)\" icon=\"el-icon-delete\" size=\"mini\"></el-button>\n            <el-button v-else type=\"primary\" @click=\"addNewDrop()\" size=\"mini\">+</el-button>\n            <el-form-item prop =\"item.tableName\" label=\"同步表名:\" >\n              <el-input v-model=\"dropInfo.tableList[index].tableName\" placeholder=\"请输入同步表名\"></el-input>\n            </el-form-item>\n            <el-form-item prop=\"item.syncOperate\" label=\"同步操作\">\n                <el-checkbox-group v-model=\"dropInfo.tableList[index].syncOperate\" size=\"mini\">\n                  <el-checkbox label=\"1\" border>创建表</el-checkbox>\n                  <el-checkbox label=\"2\" border>删除表</el-checkbox>\n                  <el-checkbox label=\"3\" border>插入记录</el-checkbox>\n                  <el-checkbox label=\"4\" border>更新记录</el-checkbox>\n                  <el-checkbox label=\"5\" border>删除记录</el-checkbox>\n                </el-checkbox-group>\n              </el-form-item>\n          </el-card>\n          <el-row>\n            <el-col>同步定时设置：</el-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.day\" controls-position=\"right\" :min=\"0\"></el-input-number><span>天</span></e-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.hour\" controls-position=\"right\" :min=\"0\"></el-input-number><span>时</span></e-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.min\" controls-position=\"right\" :min=\"0\"></el-input-number><span>分</span></e-col>\n            <e-col><el-input-number size=\"mini\" v-model=\"dropInfo.time.second\" controls-position=\"right\" :min=\"0\"></el-input-number><span>秒</span></e-col>\n          </el-row>\n        </el-form>\n        <span slot=\"footer\">\n          <el-button @click=\"dataStoreVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"dataStoreSubmit(dropInfo)\">同步</el-button>\n        </span>\n      </el-dialog>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      canalList: [\n        {\n          topic: '1'\n        }\n      ],\n      // 选择的数据表的名字\n      // 点击数据入库按钮弹出的对话框\n      dataStoreVisible: false,\n      // 爬虫保存数据案例\n      stringInfo: '',\n      dropInfo: {\n        tableList: [\n          {\n            tableName: '同步表名',\n            syncOperate: []\n          }\n        ],\n        topic: '',\n        time: {\n          day: '',\n          hour: '',\n          min: '',\n          second: ''\n        }\n      }\n    }\n  },\n  created () {\n    this.getCanalList()\n    this.getDBTableList()\n  },\n  methods: {\n    async getCanalList () {\n      const { data: res } = await this.$http.get('listCanal')\n      console.log(res)\n      if (res.code !== 200) {\n        return this.$message.error('数据库同步实例获取失败')\n      }\n      this.canalList = res.entity\n    },\n    async dataStore (website) {\n      this.dataStoreVisible = true\n      console.log(website)\n      this.dropInfo.topic = website.topic\n    },\n    async dataStoreSubmit (dropInfo) {\n      // datastore\n      const time = (dropInfo.time.second) + dropInfo.time.min * 60 + dropInfo.time.hour * 3600 + dropInfo.time.day * 3600 * 24\n      const params = {}\n      params.seconds = time\n      params.topic = dropInfo.topic\n      params.tableList = dropInfo.tableList\n      console.log(params)\n      const { data: res } = await this.$http.post('addConsumer', params)\n      if (res.code !== 200) {\n        return this.$message.error('数据库同步失败')\n      }\n      this.$message.success('数据同步成功')\n    },\n    resetForm () {\n      // 重置新增页面的数据\n      console.log(this.$refs.addFormRef)\n      this.$refs.addFormRef.resetFields()\n    },\n    async openInstance (instance) {\n      console.log(instance)\n      const { data: res } = await this.$http.post('startCanalInstance', instance)\n      if (res.code !== 200) {\n        return this.$message.error('实例启动失败')\n      }\n      this.$message.success('实例启动成功')\n    },\n    async stopInstance (instance) {\n      const params = new URLSearchParams()\n      params.append('topic', instance.topic)\n      const { data: res } = await this.$http.post('stopKafkaConsumer', params)\n      if (res.code !== 200) {\n        return this.$message.error('停止同步失败')\n      }\n      return this.$message.success('停止同步成功')\n    },\n    removeNewTag (index) {\n      this.dropInfo.tableList.pop(index)\n    },\n    addNewDrop () {\n      this.dropInfo.tableList.push({\n        tableName: '',\n        syncOperate: []\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-breadcrumb{\n  margin-bottom:15px;\n  font-size: 12px;\n}\n.el-card{\n  box-shadow: 0 1px 1px rgba(0,0,0,0.25);\n\n}\n.el-checkbox{\n  margin: 1px;\n}\n.el-input-number{\n  width: 75px;\n}\n</style>\n"],"sourceRoot":"src/components/DB"}]}