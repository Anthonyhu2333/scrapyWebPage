{"remainingRequest":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuxue/Desktop/web/data_collect_web/src/components/ScrapyConfig.vue?vue&type=style&index=0&id=72a7494c&scoped=true&lang=css&","dependencies":[{"path":"/Users/yuxue/Desktop/web/data_collect_web/src/components/ScrapyConfig.vue","mtime":1623167044018},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuxue/Desktop/web/data_collect_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtYnJlYWRjcnVtYnsKICBtYXJnaW4tYm90dG9tOjE1cHg7CiAgZm9udC1zaXplOiAxMnB4Owp9Ci5lbC1jYXJkewogIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsMCwwLDAuMjUpIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["ScrapyConfig.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrapyConfig.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n    <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n    <el-breadcrumb-item>采集设备管理</el-breadcrumb-item>\n    <el-breadcrumb-item>爬虫配置</el-breadcrumb-item>\n  </el-breadcrumb>\n  <el-card>\n    <el-button type = \"primary\" @click=\"addScrapyInstance()\">新增爬虫实例</el-button>\n    <el-dialog title=\"添加爬虫实例\" :visible.sync=\"addScrapyInstanceVisible\" width=\"50%\" @close=\"resetScrpayInstanceForm()\">\n      <el-form :model=\"scrapyInstanceInfo\" :rules=\"addScrapyruleForm\" ref=\"addScrapyInstanceRef\" label-width=\"100px\">\n        <el-form-item label=\"实例名称\" prop=\"scrapyName\">\n          <el-input v-model=\"scrapyInstanceInfo.scrapyName\" ></el-input>\n        </el-form-item>\n        <el-form-item label =\"开启爬虫命令\" prop = \"openScrapyCommand\">\n          <el-input v-model=\"scrapyInstanceInfo.openScrapyCommand\" ></el-input>\n        </el-form-item>\n        <el-form-item label =\"关闭爬虫命令\" prop = \"closeScrapyCommand\">\n          <el-input v-model=\"scrapyInstanceInfo.closeScrapyCommand\" ></el-input>\n        </el-form-item>\n        <el-form-item label =\"上传文件\" prop = \"fileSavePath\">\n          <!-- <el-input type = \"file\" v-model=\"scrapyInstanceInfo.fileSavePath\" id = \"fileInput\"></el-input> -->\n          <el-upload\n           action=\"\"\n           :limit=\"1\"\n           show-file-list\n           drag\n           :file-list = \"files\"\n           :http-request=\"uploadFile\">\n           <i class=\"el-icon-upload\"></i>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"addScrapyInstanceVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"addScrapyInstanceSubmit()\">添加</el-button>\n      </span>\n    </el-dialog>\n    <el-table :data=\"scrapysList\" stripe border style=\"width: 100%\">\n      <el-table-column type=\"index\"></el-table-column>\n      <el-table-column prop=\"scrapyName\" label=\"爬虫实例名称\"></el-table-column>\n      <el-table-column prop=\"fileSavePath\" label=\"爬虫文件保存路径\"></el-table-column>\n      <el-table-column prop=\"openScrapyCommand\" label=\"爬虫开启命令\"></el-table-column>\n      <el-table-column prop=\"closeScrapyCommand\" label=\"爬虫关闭命令\"></el-table-column>\n      <el-table-column prop=\"topic\" label=\"保存队列\"></el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"editScrapyInstance(scope.row)\"></el-button>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" @click =\"deleteScrapyInstance(scope.row)\"></el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      addScrapyInstanceVisible: false,\n      // 新增爬虫实例表单内的数据\n      scrapyInstanceInfo: {\n        scrapyName: '',\n        openScrapyCommand: '',\n        closeScrapyCommand: '',\n        fileSavePath: ''\n      },\n      files: [],\n      scrapysList: '',\n      addScrapyruleForm: {\n        scrapyName: [\n          { required: true, message: '请输入爬虫实例名称', trigger: 'blur' }\n        ],\n        scrapyCode: [\n          { required: true, message: '请输入爬虫实例执行命令', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getScrapyList()\n  },\n  methods: {\n    async getScrapyList () {\n      const { data: res } = await this.$http.get('listScrapyInstance')\n      console.log(res)\n      if (res.code !== 200) {\n        return this.$message.error('爬虫实例获取失败')\n      }\n      this.scrapysList = res.entity\n    },\n    addScrapyInstance () {\n      this.addScrapyInstanceVisible = true\n    },\n    editScrapyInstance (scrapy) {\n      console.log(scrapy)\n    },\n    deleteScrapyInstance (scrapy) {\n      console.log(scrapy)\n    },\n    resetScrpayInstanceForm () {\n      this.$refs.addScrapyInstanceRef.resetFields()\n    },\n    async uploadFile (params) {\n      const file = params.file\n      const formData = new window.FormData()\n      formData.append('file', file)\n      const { data: res1 } = await this.$http.post('uploadScrapyFile', formData)\n      if (res1.code !== 200) {\n        return this.$message.error('文件上传失败')\n      }\n      this.scrapyInstanceInfo.fileSavePath = res1.entity\n    },\n    addScrapyInstanceSubmit () {\n      this.$refs.addScrapyInstanceRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post('addScrapyInstance', this.scrapyInstanceInfo)\n        if (res.code !== 200) return this.$message.error('爬虫添加失败')\n        this.$message.success('爬虫添加成功')\n        this.getScrapyList()\n        this.addScrapyInstanceVisible = false\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n.el-breadcrumb{\n  margin-bottom:15px;\n  font-size: 12px;\n}\n.el-card{\n  box-shadow: 0 1px 1px rgba(0,0,0,0.25)!important;\n}\n</style>\n"]}]}